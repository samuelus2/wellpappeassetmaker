/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package assetmaker;

import java.awt.Color;
import javax.swing.SwingUtilities;

/**
 *
 * @author samue
 */
public class saluRGBchooser extends javax.swing.JPanel {

    /**
     * Creates new form saluRGBchooser
     */
    public saluRGBchooser() {
        initComponents();
        refresh();
    }
    
    public saluRGBchooser(int r, int g, int b) {
        this.r = r;
        this.g = g;
        this.b = b;
        initComponents();
        refresh();
        
        //txfHex.getDocument().addDocumentListener(new DocumentListener() {
    // implement the methods
        //});
    }

    int r = 0;
    int g = 0;
    int b = 0;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        previewPanel = new javax.swing.JPanel();
        lblPreview = new javax.swing.JLabel();
        pnlSpn = new javax.swing.JPanel();
        lblR = new javax.swing.JLabel();
        spnR = new javax.swing.JSpinner();
        lblG = new javax.swing.JLabel();
        spnG = new javax.swing.JSpinner();
        lblB = new javax.swing.JLabel();
        spnB = new javax.swing.JSpinner();
        txfHex = new javax.swing.JTextField();
        lblHex = new javax.swing.JLabel();

        previewPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblPreview.setText("preview:");

        javax.swing.GroupLayout previewPanelLayout = new javax.swing.GroupLayout(previewPanel);
        previewPanel.setLayout(previewPanelLayout);
        previewPanelLayout.setHorizontalGroup(
            previewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(previewPanelLayout.createSequentialGroup()
                .addComponent(lblPreview)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        previewPanelLayout.setVerticalGroup(
            previewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(previewPanelLayout.createSequentialGroup()
                .addComponent(lblPreview)
                .addGap(0, 43, Short.MAX_VALUE))
        );

        pnlSpn.setBackground(new java.awt.Color(0, 204, 255));

        lblR.setText("R:");

        spnR.setModel(new javax.swing.SpinnerNumberModel(0, 0, 255, 1));
        spnR.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spnRStateChanged(evt);
            }
        });

        lblG.setText("G:");

        spnG.setModel(new javax.swing.SpinnerNumberModel(0, 0, 255, 1));
        spnG.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spnGStateChanged(evt);
            }
        });

        lblB.setText("B:");

        spnB.setModel(new javax.swing.SpinnerNumberModel(0, 0, 255, 1));
        spnB.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spnBStateChanged(evt);
            }
        });

        txfHex.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txfHexCaretUpdate(evt);
            }
        });

        lblHex.setText("hex:");

        javax.swing.GroupLayout pnlSpnLayout = new javax.swing.GroupLayout(pnlSpn);
        pnlSpn.setLayout(pnlSpnLayout);
        pnlSpnLayout.setHorizontalGroup(
            pnlSpnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSpnLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlSpnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblG)
                    .addComponent(lblR)
                    .addComponent(lblB)
                    .addComponent(lblHex, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlSpnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(spnB)
                    .addComponent(spnG, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spnR, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(txfHex))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlSpnLayout.setVerticalGroup(
            pnlSpnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSpnLayout.createSequentialGroup()
                .addGroup(pnlSpnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblR)
                    .addComponent(spnR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlSpnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblG)
                    .addComponent(spnG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlSpnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spnB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlSpnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txfHex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblHex))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(previewPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(pnlSpn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlSpn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(previewPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void spnRStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnRStateChanged
        
        r = (int) spnR.getValue();
        refresh();
        changeHexString();
        System.out.println("r" + r);
    }//GEN-LAST:event_spnRStateChanged

    private void spnGStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnGStateChanged
        g = (int) spnG.getValue();
        refresh();
        changeHexString();
        System.out.println("g" + g);
        
    }//GEN-LAST:event_spnGStateChanged

    private void spnBStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnBStateChanged
        b = (int) spnB.getValue();
        refresh();
        changeHexString();
        System.out.println("b" + b);
        
    }//GEN-LAST:event_spnBStateChanged

    private void txfHexCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txfHexCaretUpdate
        parseHexString(txfHex.getText());
    }//GEN-LAST:event_txfHexCaretUpdate

    private void refresh() {
        previewPanel.setBackground(new Color(r, g, b));
        lblPreview.setForeground(new Color(255-r, 255-g, 255-b));
    }
    
    private void changeHexString() {
        String hexString = "";
        //(((r2) << 16) | ((g2) << 8) | (b2))
        // short r = (short)((rgb >> 16) & 0xFF), g = (short)((rgb >> 8) & 0xFF), b = (short)(rgb & 0xFF);
        int rgbVal = (r << 16) | (g << 8) | b;
        hexString += Integer.toHexString(rgbVal);
        txfHex.setText(hexString);
    }
    
    private void refreshSpinners() {
        
        Runnable refreshSpn = new Runnable() {
            @Override
            public void run() {
                spnR.setValue(r);
                spnG.setValue(g);
                spnB.setValue(b);
            }
        };       
        SwingUtilities.invokeLater(refreshSpn);
    }
    
    boolean blockhexstring = false;
    
    private void parseHexString(String hexString) {

        if(blockhexstring) return;
        
        if(hexString.startsWith("0x")) hexString = hexString.replace("0x", "");
        
        if(hexString.length() == 0) return;
        
        String legalLetters = "0123456789ABCDEF";
        hexString = hexString.toUpperCase();
        
        String hexString2 = "";
        int len = 0;
        
        for (int i = 0; i < hexString.length(); i++) {
            if(legalLetters.contains(String.valueOf(hexString.charAt(i)))) {
                if(len >= 6) break;
                hexString2 += String.valueOf(hexString.charAt(i));
                len++;
            }
        }
        
        if(len != 0) {
            int rgb = Integer.parseInt(hexString2, 16);
            r = ((rgb >> 16) & 0xFF); 
            g = ((rgb >> 8) & 0xFF); 
            b = (rgb & 0xFF);
            refresh();
            refreshSpinners();
        }
        
        final String hexStringF = hexString2;
        
        Runnable refreshTxf = new Runnable() {
            @Override
            public void run() {
                blockhexstring = true;
                txfHex.setText(hexStringF);
                blockhexstring = false;
            }
        };       
        SwingUtilities.invokeLater(refreshTxf);
    }
    
    public int getRGB() {
        return  (r << 16) | (g << 8) | b;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblB;
    private javax.swing.JLabel lblG;
    private javax.swing.JLabel lblHex;
    private javax.swing.JLabel lblPreview;
    private javax.swing.JLabel lblR;
    private javax.swing.JPanel pnlSpn;
    private javax.swing.JPanel previewPanel;
    private javax.swing.JSpinner spnB;
    private javax.swing.JSpinner spnG;
    private javax.swing.JSpinner spnR;
    private javax.swing.JTextField txfHex;
    // End of variables declaration//GEN-END:variables
}
